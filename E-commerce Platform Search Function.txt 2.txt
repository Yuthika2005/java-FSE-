class Product {
    int productId;
    String productName;
    String category;

    Product(int productId, String productName, String category) {
        this.productId = productId;
        this.productName = productName;
        this.category = category;
    }
}

class Search {
    static Product linearSearch(Product[] products, String name) {
        for (Product product : products) {
            if (product.productName.equals(name)) {
                return product;
            }
        }
        return null;
    }

    static Product binarySearch(Product[] products, String name) {
        int low = 0, high = products.length - 1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (products[mid].productName.equals(name)) return products[mid];
            if (products[mid].productName.compareTo(name) < 0) low = mid + 1;
            else high = mid - 1;
        }
        return null;
    }
}
// Analysis
Linear Search: 𝑂(𝑛)
O(n).

Binary Search: 
𝑂(log𝑛)
O(logn) but requires sorted input. Binary search is preferred for larger, sorted datasets.